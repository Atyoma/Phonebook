{"version":3,"file":"static/js/546.a8fa6dd3.chunk.js","mappings":"kMACA,EAAwB,yBAAxB,EAAwD,wBAAxD,EAAwF,yBAAxF,EAA+J,4B,uCCMzJA,GAAQC,EAAAA,EAAAA,GAAY,CACxBC,QAAS,CACPC,QAAS,CACPC,KAAM,UACNC,aAAc,WAKL,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACH,OAAOL,EAASM,GAClB,IAAK,WACH,OAAOJ,EAAYI,GACrB,QACE,SAWN,OACE,iBAAKC,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,yBAEA,kBAAMC,SAXW,SAAAC,GACnBA,EAAMC,iBACNf,EAASgB,EAAAA,GAAAA,MAAqB,CAAEb,MAAAA,EAAOE,SAAAA,KACvCD,EAAS,IACTE,EAAY,KAOoBK,UAAWC,EAAQK,aAAa,MAA9D,WACE,mBAAON,UAAWC,EAAlB,mBAEE,kBACEM,KAAK,QACLT,KAAK,QACLC,MAAOP,EACPgB,SAAUZ,EACVU,aAAa,MACbG,UAAQ,QAIZ,mBAAOT,UAAWC,EAAlB,sBAEE,kBACEM,KAAK,WACLT,KAAK,WACLC,MAAOL,EACPc,SAAUZ,EACVU,aAAa,MACbG,UAAQ,QAGZ,SAACC,EAAA,EAAD,CAAe5B,MAAOA,EAAtB,UACE,SAAC6B,EAAA,EAAD,CAAQJ,KAAK,SAASK,MAAM,UAAUC,QAAQ,YAA9C","sources":["webpack://phonebook/./src/pages/LoginPage/LoginPage.module.css?f8e0","pages/LoginPage/LoginPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"LoginPage_title__RBt-o\",\"form\":\"LoginPage_form__h3Le9\",\"label\":\"LoginPage_label__eihZ8\",\"button\":\"LoginPage_button__phWEP\",\"loginBox\":\"LoginPage_loginBox__bcT3a\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../../redux/auth';\nimport s from './LoginPage.module.css';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\n\nconst theme = createTheme({\n  palette: {\n    neutral: {\n      main: '#64748B',\n      contrastText: '#fff',\n    },\n  },\n});\n\nexport default function LoginView() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(authOperations.logIn({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div className={s.loginBox}>\n      <h1 className={s.title}>Login page</h1>\n\n      <form onSubmit={handleSubmit} className={s.form} autoComplete=\"off\">\n        <label className={s.label}>\n          Email\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n            autoComplete=\"off\"\n            required\n          />\n        </label>\n\n        <label className={s.label}>\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n            autoComplete=\"off\"\n            required\n          />\n        </label>\n        <ThemeProvider theme={theme}>\n          <Button type=\"submit\" color=\"neutral\" variant=\"contained\">\n            Log in\n          </Button>\n        </ThemeProvider>\n      </form>\n    </div>\n  );\n}\n"],"names":["theme","createTheme","palette","neutral","main","contrastText","LoginView","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","target","name","value","className","s","onSubmit","event","preventDefault","authOperations","autoComplete","type","onChange","required","ThemeProvider","Button","color","variant"],"sourceRoot":""}